Name;Year;Paper(s);DOI;Link to paper;Approach used;NetT;ExeT;PF;PFSM;Other Output;Text-based;Binary-based;Hybrid;Other Protocols;Source Code
Discoverer;2007;W. Cui, J. Kannan, and H. J. Wang, “Discoverer: Automatic protocol reverse engineering from network traces.,” in USENIX security symposium, 2007, pp. 1–14. ;;https://www.usenix.org/event/sec07/tech/full_papers/cui/cui.pdf;Tokenization of messages, recursive clustering to find formats, merge similar formats;x;;x;;;HTTP;RPC;SMB, CIFS;;
Polyglot;2007;J. Caballero, H. Yin, Z. Liang, and D. Song, “Polyglot: automatic extraction of protocol message format using dynamic binary analysis,” in Proceedings of the 14th ACM Conference on Computer and Communications Security (CCS ’07), pp. 317–329, ACM, November 2007.;https://doi.org/10.1145/1315245.1315286;https://people.eecs.berkeley.edu/~dawnsong/papers/2007%20p317-caballero.pdf;Dynamic taint-analysis;;x;x;;;HTTP, Samba, ICQ;DNS, IRC;;;
AutoFormat;2008;Z. Lin, X. Jiang, D. Xu, and X. Zhang, “Automatic protocol format reverse engineering through context-aware monitored execution,” in Proceedings of the 15th Symposium on Network and  Distributed System Security (NDSS ’08), February 2008.;;https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.120.2651&rep=rep1&type=pdf;Dynamic taint-analysis;;x;x;;;HTTP, SIP;DHCP, RIP, OSPF;SMB, CIFS;;
Tupni;2008;W. Cui, M. Peinado, K. Chen, H. J. Wang, and L. Irun-Briz, “Tupni: automatic reverse engineering of input formats,” in Proceedings of the 15th ACM Conference on Computer and Communications Security (CCS ’08), pp. 391–402, ACM, Alexandria, Va, USA, October 2008.;10.1145/1455770.1455820;https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/tupni-ccs08.pdf;"Dynamic taint-analysis; look for loops to identify boundaries within messages";;x;x;;;HTTP, FTP;RPC, DNS, TFTP;;WMF, BMP, JPG, PNG, TIF;
ReFormat;2009;Z. Wang, X. Jiang, W. Cui, X. Wang, and M. Grace, “ReFormat: automatic reverse engineering of encrypted messages,” in Computer Security—ESORICS 2009. ESORICS 2009, M. Backes and P. Ning, Eds., vol. 5789 of Lecture Notes in Computer Science, pp. 200–215, Springer, Berlin, Germany, 2009.;10.1007/978-3-642-04444-1_13;https://link.springer.com/content/pdf/10.1007/978-3-642-04444-1_13.pdf;Dynamic taint-analysis, especially targeting encrypted protocols by looking for bitwise and arithmetic operations;;x;x;;;HTTP, MIME;IRC;;One unknown protocol;
Prospex;2009;P. M. Comparetti, G. Wondracek, C. Kruegel, and E. Kirda, “Prospex: protocol specification extraction,” in Proceedings of the 30th IEEE Symposium on Security and Privacy, pp. 110–125, Berkeley, Calif, USA, May 2009.;10.1109/SP.2009.14;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.720.3272&rep=rep1&type=pdf;Dynamic taint-analysis with following message clustering, optionally provides fuzzing candidates for Peach fuzzer;x;x;x;x;;SMTP, SIP;SMB;;Agobot (C&C);
ProDecoder;2012;Y. Wang, X. Yun, M. Z. Shafiq et al., “A semantics aware approach to automated reverse engineering unknown protocols,” in Proceedings of the 20th IEEE International Conference on Network Protocols (ICNP ’12), pp. 1–10, IEEE, Austin, Tex, USA, November 2012.;10.1109/ICNP.2012.6459963;https://yaogroup.cs.vt.edu/papers/ICNP-12.pdf;"Successor of Biprominer which also addresses text-based protocols; two-phases are used: first apply Biprominer, second use Needleman-Wunsch for alignment";x;;x;;;SMTP, SIP;SMB;;;
Wang et al.;2013;Y. Wang, N. Zhang, Y.-M. Wu, B.-B. Su, and Y.-J. Liao, “Protocol formats reverse engineering based on association rules in wireless environment,” in Proceedings of the 12th IEEE International Conference on Trust, Security and Privacy in Computing and Communications (TrustCom ’13), pp. 134–141, Melbourne, Australia, July 2013.;10.1109/TrustCom.2013.21;;Capturing of data, identifying frames and inferring the format by looking and frequency of frames and doing association analysis (using Apriori and FP-Growth).;x;;x;;;ICMP;ARP;;;
ProGraph;2015;Q. Huang, P. P. C. Lee, and Z. Zhang, “Exploiting intrapacket dependency for fine-grained protocol format inference,” in Proceedings of the 14th IFIP Networking Conference (NETWORKING ’15), Toulouse, France, May 2015.;;;Please review;x;;x;;;HTTP;DNS, BitTorrent, WeChat;;;
Cai et al.;2016;J. Cai, J. Luo, and F. Lei, “Analyzing network protocols of application layer using hidden Semi-Markov model,” Mathematical Problems in Engineering, vol. 2016, Article ID 9161723, 14 pages, 2016.;;;Please review;x;;x;;;HTTP, SSDP;DNS, BitTorrent, QQ, NetBios;;;
WASp;2016;K. Choi, Y. Son, J. Noh, H. Shin, J. Choi, and Y. Kim, “Dissecting customized protocols: automatic analysis for customized protocols based on IEEE 802.15.4,” in Proceedings of the 9th ACM Conference on Security and Privacy in Wireless and Mobile Networks, pp. 183–193, Darmstadt, Germany, July 2016.;10.1145/2939918.2939921;https://koasas.kaist.ac.kr/bitstream/10203/215875/1/choi_wisec2016.pdf;Pcap files are provided with context information (i.e. known MAC address), then grouping and analysing (looking for CRC, N-gram, Entropy, Features, Ranges), afterwards report creation based on scoring.;x;;x;;scored analysis reports, spoofing candidates;;;;IEEE 802.15.4 proprietary protocols, Smart plug & PSD systems;
PEXT;2007;M. Shevertalov and S. Mancoridis, “A reverse engineering tool for extracting protocols of networked applications,” in Proceedings of the 14th Working Conference on Reverse Engineering (WCRE ’07), pp. 229–238, October 2007.;;;Message clustering for creating FSM graph and simplify FSM graph;;x;;x;;FTP;;;;
Xiao et al.;2009;M.-M. Xiao, S.-Z. Yu, and Y. Wang, “Automatic network protocol automaton extraction,” in Proceedings of the 3rd International Conference on Network and System Security (NSS ’09), pp. 336–343, October 2009.;;;Please review;;x;;x;;HTTP, FTP, SMTP;;;;
Trifilo et al.;2009;A. Trifilo, S. Burschka, and E. Biersack, “Traffic to protocol reverse engineering,” in Proceedings of the IEEE Symposium on Computational Intelligence for Security and Defense Applications, pp. 1–8, July 2009.;r;https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.161.2189&rep=rep1&type=pdf;Measure byte-wise variances in aligned messages;x;;;x;;;TCP, DHCP, ARP, KAD;;;
Antunes and Neves;2009;J. Antunes and N. Neves, “Building an automaton towards reverse protocol engineering,” 2009, http://www.di.fc.ul.pt/∼nuno/PAPERS/INFORUM09.pdf.;;;Please review;x;;;x;;FTP;;;;
ReverX;2011;J. Antunes, N. Neves, and P. Verissimo, “Reverse engineering of protocols from network traces,” in Proceedings of the 18th Working Conference on Reverse Engineering (WCRE ’11), pp. 169–178, October 2011.;10.1109/WCRE.2011.28;https://www.researchgate.net/profile/Joao_Antunes3/publication/221200255_Reverse_Engineering_of_Protocols_from_Network_Traces/links/0fcfd50c3eb9574ac4000000.pdf;"Speech recognition (thus only for text-based protocols) to find carriage returns and spaces, afterwards looking for frequencies of keywords; multiple partial FSMs are merged and simplified to get PFSM";x;;x;x;;FTP;;;;https://github.com/jasantunes/reverx
Veritas;2011;Y. Wang, Z. Zhang, D. D. Yao, B. Qu, and L. Guo, “Inferring protocol state machine from network traces: a probabilistic approach,” in Proceedings of the 9th Applied Cryptography and Network Security International Conference (ACNS ’11), pp. 1–18, 2011.;;;Identifiying keywords, clustering and transition probability → probabilistic protocol state machine;x;;;x;;SMTP;PPLIVE, XUNLEI;;;
Zhang et al.;2012;Z. Zhang, Q.-Y. Wen, and W. Tang, “Mining protocol state machines by interactive grammar inference,” in Proceedings of the 2012 3rd International Conference on Digital Manufacturing and Automation (ICDMA ’12), pp. 524–527, August 2012.;;;Please review;x;;;x;;HTTP, SNMP, ISAKMP;;;;
Laroche et al.;2013;P. Laroche, A. Burrows, and A. N. Zincir-Heywood, “How far an evolutionary approach can go for protocol state analysis and discovery,” in Proceedings of the IEEE Congress on Evolutionary Computation (CEC ’13), pp. 3228–3235, June 2013.;;;Please review;x;;;x;;FTP;DHCP;;;
Meng et al.;2014;F. Meng, Y. Liu, C. Zhang, T. Li, and Y. Yue, “Inferring protocol state machine for binary communication protocol,” in Proceedings of the IEEE Workshop on Advanced Research and Technology in Industry Applications (WARTIA ’14), pp. 870–874, September 2014.;10.1109/WARTIA.2014.6976411;;Please review;x;;;x;;;TCP, ARP;;;
GAPA;2005;N. Borisov, D. J. Brumley, H. J. Wang, J. Dunagan, P. Joshi, and C. Guo, “Generic application-level protocol analyzer and its language,” MSR Technical Report MSR-TR-2005-133, 2005.;;http://www.academia.edu/download/31148072/2005-133.pdf;Protocol analyzer and open language that uses the protocol analyzer specification Spec → it is meant to be integrated in monitoring and analyzing tools;;x;x;x;;HTTP;;;;
Biprominer;2011;Y. Wang, X. Li, J. Meng, Y. Zhao, Z. Zhang, and L. Guo, “Biprominer: automatic mining of binary protocol features,” in Proceedings of the 12th International Conference on Parallel and Distributed Computing, Applications and Technologies (PDCAT ’11), pp. 179–184, October 2011.;10.1109/PDCAT.2011.25;;Statistical analysis including three phases, learning phase, labeling phase and transition probability model building phase. See [this figure](img/biprominer.png).;x;;x;x;;;XUNLEI, QQLive, SopCast;;;
Netzob;2012;"G. Bossert, F. Guihéry, and G. Hiet, “Towards automated protocol reverse engineering using semantic information,” in Proceedings of the 9th ACM Symposium on Information, Computer and Communications Security, Kyoto, Japan, June 2014.
G. Bossert and F. Guihéry, “Reverse and simulate your enemy botnet C&C,” in Proceedings of the Mapping a P2P Botnet with Netzob, Black Hat 2012, Abu Dhabi, UAE, December 2012.";10.1145/2590296.2590346;https://www.amossys.fr/upload/publication.pdf;See [this figure](https://github.com/netzob/netzob/blob/4a72c0cbd6d1e7b997b2b8ad170b7a38e400dfca/netzob/doc/documentation/source/netzob_archi.png);x;x;x;x;;FTP, Samba;SMB;;Unknown P2P & VoIP protocol;https://github.com/netzob/netzob
AutoReEngine;2013;J.-Z. Luo and S.-Z. Yu, “Position-based automatic reverse engineering of network protocols,” Journal of Network and Computer Applications, vol. 36, no. 3, pp. 1070–1077, 2013.;10.1016/j.jnca.2013.01.013;;Apriori Algorithm (based on Agrawal/Srikant 1994). Identify fields and keywords by considering the amount of occurrences. Message formats are considered as series of keywords. State machines are derived from labeled messages or frequent subsequences. See [this figure](img/autoreengine.png) for clarification.;x;;x;x;;HTTP, FTP, SMTP, POP3;DNS, NetBIOS;;;
ScriptGen;2005;C. Leita, K. Mermoud, and M. Dacier, “ScriptGen: an automated script generation tool for Honeyd,” in Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC ’05), pp. 203–214, Tucson, Ariz, USA, December 2005.;10.1109/CSAC.2005.49;https://www.researchgate.net/profile/Marc_Dacier/publication/4207362_ScriptGen_an_automated_script_generation_tool_for_Honeyd/links/02e7e52f3691fd9dbb000000/ScriptGen-an-automated-script-generation-tool-for-Honeyd.pdf;Grouping and clustering messages, find edges from clusters to clusters for being able to replay messages once a similar message arrives;x;;;;Dialogs/scripts (for replaying);HTTP;NetBIOS;;DCE;
RolePlayer;2006;W. Cui, V. Paxson, N. C. Weaver, and R. H. Katz, “Protocolindependent adaptive replay of application dialog,” in Proceedings of the 13th Symposium on Network and Distributed System Security (NDSS ’06), 2006.;;https://www.ndss-symposium.org/wp-content/uploads/2017/09/Protocol-Independent-Adaptive-Replay-of-Application-Dialog-Weidong-Cui.pdf;Byte-wise sequence alignment (find variable fields in messages) and clustering with FSM simplification;x;;;;Dialogs/scripts;HTTP, FTP, SMTP, NFS, TFTP;DNS, BitTorrent, QQ, NetBios;SMB, CIFS;;
Ma et al.;2006;J. Ma, K. Levchenko, C. Kreibich, S. Savage, and G. Voelker, “Automatic protocol inference: unexpected means of identifying protocols,” UCSD Computer Science Technical Report CS2006-0850, 2006.;10.1145/1177080.1177123;http://www.academia.edu/download/38268/2q7zdptm5klmgg2h0g9.pdf;Please review;x;;;;App-identification;HTTP, FTP, SMTP, HTTPS (TCP-Protos);DNS, NetBIOS, SrvLoc (UDP-Protos);;;
Boosting;2008;K. Gopalratnam, S. Basu, J. Dunagan, and H. J. Wang, “Automatically extracting fields from unknown network protocols,” in Proceedings of the 15th Symposium on Network and Distributed System Security (NDSS ’08), 2008.;;http://www.nicemice.net/helen/papers/sysml-Gopalratnam.pdf;Please review;x;;;;Field(s);;DNS;;;
Dispatcher;2009;J. Caballero, P. Poosankam, C. Kreibich, and D. Song, “Dispatcher: enabling active botnet infiltration using automatic protocol reverse-engineering,” in Proceedings of the 16th ACM Conference on Computer and Communications Security (CCS ’09), pp. 621–634, ACM, Chicago, Ill, USA, November 2009.;10.1145/1653662.1653737;https://people.eecs.berkeley.edu/~dawnsong/papers/2009%20Dispatcher.pdf;Dynamic taint-analysis (successor of Polyglot using send instead of received messages);;x;;;C&C malware;HTTP, FTP, ICQ;DNS;;;
ASAP;2011;T. Krueger, N. Krmer, and K. Rieck, “Asap: automatic semantics-aware analysis of network payloads,” in Proceedings of the ECML/PKDD, 2011.;;https://oar.tib.eu/jspui/bitstream/123456789/2288/1/664831966.pdf;Please review;x;;;;Semantics;HTTP, FTP, IRC, TFTP;;;;
Dispatcher2;2013;J. Caballero and D. Song, “Automatic protocol reverse-engineering: message format extraction and field semantics inference,” Computer Networks, vol. 57, no. 2, pp. 451–474, 2013.;10.1016/j.comnet.2012.08.003;http://www.academia.edu/download/47267446/j.comnet.2012.08.00320160715-7025-1uns1ji.pdf;Please review;;x;;;C&C malware;HTTP, FTP, ICQ;DNS;SMB;;
ProVeX;2013;C. Rossow and C. J. Dietrich, “PROVEX: detecting botnets with encrypted command and control channels,” in Detection of Intrusions and Malware, and Vulnerability Assessment, Springer, 2013.;;https://chrisdietri.ch/files/provex-dimva2013.pdf;Identify Botnet traffic and try to infer the botnet type by using signatures;x;;;;Signatures;HTTP, SMTP, IMAP;DNS, VoIP, XMPP;;Malware Family Protocols;
PIP;2004;M. Beddoe, “The protocol informatics project,” 2004, http://www.4tphi.net/∼awalters/PI/PI.html.;;http://www.4tphi.net/~awalters/PI/pi.pdf;"Keyword detection and Sequence alignment based on Needleman and Wunsch 1970 and Smith and Waterman 1981; this approach was applied and extended by many following papers";x;;;;Keywords/ fields;HTTP;;;;https://web.archive.org/web/20090416234849/http://4tphi.net/~awalters/PI/PI.html
FieldHunter;2015;I. Bermudez, A. Tongaonkar, M. Iliofotou, M. Mellia, and M. M. Munafo, “Automatic protocol field inference for deeper protocol understanding,” in Proceedings of the 14th IFIP Networking Conference (Networking ’15), pp. 1–9, May 2015.;10.1109/IFIPNetworking.2015.7145307;http://dl.ifip.org/db/conf/networking/networking2015/1570062733.pdf;Please review;x;;;;Fields;MSNP;DNS;;SopCast, Ramnit;
RS Cluster;2015;J.-Z. Luo, S.-Z. Yu, and J. Cai, “Capturing uncertainty information and categorical characteristics for network payload grouping in protocol reverse engineering,” Mathematical Problems in Engineering, vol. 2015, Article ID 962974, 9 pages, 2015.;;;Please review;x;;;;Grouped-messages;FTP, SMTP, POP3, HTTPS;DNS, XunLei, BitTorrent, BitSpirit, QQ, eMule;;MSSQL, Kugoo, PPTV;
UPCSS;2015;R. Lin, O. Li, Q. Li, and Y. Liu, “Unknown network protocol classification method based on semi supervised learning,” in Proceedings of the IEEE International Conference on Computer and Communications (ICCC ’15), pp. 300–308, Chengdu, China, October 2015.;10.1109/CompComm.2015.7387586;;Please review;x;;;;Proto-classification;HTTP, FTP, SMTP, POP3, IMAP;DNS, SSL, SSH;SMB;;
PowerShell;2017;D. R. Fletcher Jr., Identifying Vulnerable Network Protocols with PowerShell, SANS Institute Reading Room site, 2017.;;;Please review;x;;;;Dialogs/scripts;;ARP, OSPF, DHCP, STP;;CDP/DTP/VTP, HSRP, LLDP, LLMNR, mDNS, NBNS, VRRP;
ProPrint;2017;Y. Wang, X. Yun, Y. Zhang, L. Chen, and G. Wu, “A nonparametric approach to the automated protocol fingerprint inference,” Journal of Network and Computer Applications, vol. 99, pp. 1–9, 2017.;10.1016/j.jnca.2017.10.009;;Please review;x;;;;Fingerprints;;;;;
ProHacker;2017;Y. Wang, X. Yun, Y. Zhang, L. Chen, and T. Zang, “Rethinking robust and accurate application protocol identification,” Computer Networks, vol. 129, pp. 64–78, 2017.;10.1016/j.comnet.2017.09.006;;Please review;x;;;;Keywords;;;;;
FFE/x86;2006;Lim, J., Reps, T., Liblit, B.: Extracting output formats from executables. In: 13th Working Conference on Reverse Engineering, 2006. WCRE ’06, pp. 167–178. IEEE, Benevento (2006). doi:10.1109/WCRE.2006.29;10.1109/WCRE.2006.29;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.138.3603&rep=rep1&type=pdf;Please review;;x;;;;;;;;
Replayer;2006;Cui, W., Paxson, V., Weaver, N., Katz, R.H.: Protocol-independent adaptive replay of application dialog. In: Proceedings of the 13th Annual Network and Distributed System Security Symposium (NDSS). Internet Society, San Diego (2006). http://research.microsoft.com/apps/pubs/default.aspx?id=153197;;;Please review;;x;;;;;;;;
Rosetta;2007;Caballero, J., Song, D.: Rosetta: Extracting Protocol Semantics Using Binary Analysis with Applications to Protocol Replay and NAT Rewriting. Technical Report CMU-CyLab-07-014, Carnegie Mellon University, Pittsburgh (2007);;;Please review;;x;;;;;;;;
ConfigRE;2008;Wang, R., Wang, X., Zhang, K., Li, Z.: Towards automatic reverse engineering of software security configurations. In: Proceedings of the 15th ACM Conference on Computer and Communications Security, CCS ’08, pp. 245–256. ACM, Limerick (2008). doi:10.1145/1455770.1455802;;;Please review;;x;;;;;;;;
Fuzzgrind;2009;Campana, G.: Fuzzgrind: an automatic fuzzing tool. In: Hack. lu. Hack. lu, Luxembourg (2009);;;Please review;;x;;;;;;;;
REWARDS;2010;Lin, Z., Zhang, X., Xu, D.: Automatic reverse engineering of data structures from binary execution. In: Proceedings of the 17th Annual Network and Distributed System Security Symposium (NDSS). Internet Society, San Diego (2010);;;Please review;;x;;;;;;;;
MACE;2010;"Cho, C.Y., Babi D., Shin, E.C.R., Song, D.: Inference and analysis of formal models of botnet command and control protocols. In: Proceedings of the 17th ACM Conference on Computer and Communications Security, CCS ’10, pp. 426–439. ACM, New York, NY (2010). doi:10.1145/1866307.1866355
Cho, C.Y., Babi, D., Poosankam, P., Chen, K.Z., Wu, E.X., Song, D.: MACE: model-inference-assisted concolic exploration for protocol and vulnerability discovery. In: Proceedings of the 20th USENIX Conference on Security, SEC’11, p. 19. USENIX Association, Berkeley, CA (2011)";;;Please review;;x;;;;;;;;
Howard;2011;Slowinska, A., Stancescu, T., Bos, H.: Howard: a dynamic excavator for reverse engineering data structures. In: Proceedings of the 18th Annual Network and Distributed System Security Symposium (NDSS). Internet Society, San Diego (2011);;;Please review;;x;;;;;;;;
PRISMA;2012;Krueger, T., Gascon, H., Krmer, N., Rieck, K.: Learning stateful models for network honeypots. In: Proceedings of the 5th ACM Workshop on Security and Artificial Intelligence, AISec ’12, pp. 37–48. ACM, New York, NY (2012). doi:10.1145/2381896.2381904;;;Please review, follow-up paper/project to ASAP;x;;;;;;;;;https://github.com/tammok/PRISMA/
ARTISTE;2012;Caballero, J., Grieco, G., Marron, M., Lin, Z., Urbina, D.: ARTISTE: Automatic Generation of Hybrid Data Structure Signatures from Binary Code Executions. Technical Report TR-IMDEA-SW-2012-001, IMDEA Software Institute, Madrid (2012);;;Please review;;x;;;;;;;;
AFL;2014;Zalewski, M.: American Fuzzy Loop. http://lcamtuf.coredump.cx/afl/technical_details.txt;;;Please review;;x;;;;;;;;
ARGOS;2015;Zeng, J., Lin, Z.: Towards automatic inference of kernel object semantics from binary code. In: 18th International Symposium, RAID 2015, vol. 9404, pp. 538–561. Springer, Kyoto (2015). doi:10.1007/978-3-319-26362-5;;;Please review;;x;;;;;;;;
PULSAR;2015;H. Gascon, C. Wressnegger, F. Yamaguchi, D. Arp, and K. Rieck, “Pulsar: Stateful Black-Box Fuzzing of Proprietary Network Protocols,” in Security and Privacy in Communication Networks, vol. 164, B. Thuraisingham, X. Wang, and V. Yegneswaran, Eds. Cham: Springer International Publishing, 2015, pp. 330–347. ;10.1007/978-3-319-28865-9_18;http://user.cs.uni-goettingen.de/~krieck/docs/2015-securecomm.pdf;Reverse engineer network protocols with the aim to fuzz them with thus knowledge;;;;;;;;;;https://github.com/hgascon/pulsar
Yang et al.;2020;C. Yang, C. Fu, Y. Qian, Y. Hong, G. Feng, and L. Han, “Deep Learning-Based Reverse Method of Binary Protocol,” in Security and Privacy in Digital Economy, vol. 1268, S. Yu, P. Mueller, and J. Qian, Eds. Singapore: Springer Singapore, 2020, pp. 606–624. ;10.1007/978-981-15-9129-7_42;;Using deep-learning (LSTM-FCN) for reversing binary protocols;x;;x;;;;IPv4, TCP;;;
Sun et al.;2020;F. Sun, S. Wang, C. Zhang, and H. Zhang, “Clustering of unknown protocol messages based on format comparison,” Computer Networks, vol. 179, p. 107296, Oct. 2020, doi: 10.1016/j.comnet.2020.107296. ;10.1016/j.comnet.2020.107296;;"""To measure format similarity of unknown protocol messages in a proper granularity, we propose relative measurements, Token Format Distance (TFD) and Message Format Distance (MFD), based on core rules of Augmented Backus-Naur Form (ABND)."" for clustering process Silhouette Coefficient and Dunn Index are used. density based cluster algorithm DBSCAN is used for clustering of messages";;;;;;;;;;
Goo et al.;2019;Y.-H. Goo, K.-S. Shim, M.-S. Lee, and M.-S. Kim, “Protocol Specification Extraction Based on Contiguous Sequential Pattern Algorithm,” IEEE Access, vol. 7, pp. 36057–36074, 2019, doi: 10.1109/ACCESS.2019.2905353. ;10.1109/ACCESS.2019.2905353;https://ieeexplore.ieee.org/iel7/6287639/6514899/08667834.pdf;Apriori based: Finding „frequent contiguous common subsequences“ via new Contiguous Sequential Pattern (CSP) algorithm which is based on Generalized Sequential Pattern (GSP) and other Apriori algorithms. CSP is used three times hierarchically to extract different information/fields based on previous results.;x;;x;x;;HTTP;DNS;;;
Shim et al.;2020;K. Shim, Y. Goo, M. Lee, and M. Kim, “Clustering method in protocol reverse engineering for industrial protocols,” International Journal of Network Management, Jun. 2020, doi: 10.1002/nem.2126. ;10.1002/nem.2126;https://nmlab.korea.ac.kr/publication/published.papers/2020/2020.06_Clustering_method_for_ICS-APRE-IJNM.pdf;Follow up on Goo et al. 2019;x;;x;;;FTP;Modbus/TCP, Ethernet/IP;;;
IPART;2020;X. Wang, K. Lv, and B. Li, “IPART: an automatic protocol reverse engineering tool based on global voting expert for industrial protocols,” International Journal of Parallel, Emergent and Distributed Systems, vol. 35, no. 3, pp. 376–395, May 2020, doi: 10.1080/17445760.2019.1655740. ;10.1080/17445760.2019.1655740;;Using extended voting expert algorithm to infer boundaries of fields, otherwise using three phase which are tokenizing, classifying and clustering.;x;;x;;;;Modbus, IEC104, Ethernet/IP;;;
Universal Radio Hacker;2019;"J. Pohl and A. Noack, “Universal radio hacker: A suite for analyzing and attacking stateful wireless protocols,” Baltimore, MD, Aug. 2018, [Online]. Available: https://www.usenix.org/conference/woot18/presentation/pohl. 
J. Pohl and A. Noack, “Automatic wireless protocol reverse engineering,” Santa Clara, CA, Aug. 2019, [Online]. Available: https://www.usenix.org/conference/woot19/presentation/pohl. ";;https://www.usenix.org/system/files/conference/woot18/woot18-paper-pohl.pdf;Physical layer based analysis of proprietary wireless protocols considering wireless specific properties like Received Signal Strength Indicator (RSSI) and using statistical methods;x;;x;;;;;;proprietary wireless protocols of IoT devices;https://github.com/jopohl/urh
Proword;2014;Z. Zhang, Z. Zhang, P. P. C. Lee, Y. Liu, and G. Xie, “ProWord: An unsupervised approach to protocol feature word extraction,” in IEEE INFOCOM 2014 - IEEE Conference on Computer Communications, Toronto, ON, Canada, Apr. 2014, pp. 1393–1401, doi: 10.1109/INFOCOM.2014.6848073. ;10.1109/INFOCOM.2014.6848073;http://adslab.cse.cuhk.edu.hk/pubs/infocom14proword.pdf;Please review;;;;;;;;;;
Luo et al.;2019;X. Luo, D. Chen, Y. Wang, and P. Xie, “A Type-Aware Approach to Message Clustering for Protocol Reverse Engineering,” Sensors, vol. 19, no. 3, p. 716, Feb. 2019, doi: 10.3390/s19030716. ;10.3390/s19030716;https://www.mdpi.com/1424-8220/19/3/716/pdf;From abstract: “[…] this study proposes a type-aware approach to message clustering guided by type information. The approach regards a message as a combination of n-grams, and it employs the Latent Dirichlet Allocation (LDA) model to characterize messages with types and n-grams via inferring the type distribution of each message.”;;;;;;;;;;
Esoul and Walkinshaw;2017;O. Esoul and N. Walkinshaw, “Using Segment-Based Alignment to Extract Packet Structures from Network Traces,” in 2017 IEEE International Conference on Software Quality, Reliability and Security (QRS), Prague, Czech Republic, Jul. 2017, pp. 398–409, doi: 10.1109/QRS.2017.49. ;10.1109/QRS.2017.49;https://leicester.figshare.com/articles/Using_Segment-Based_Alignment_to_Extract_Packet_Structures_from_Network_Traces/10236467/files/18473123.pdf;Please review;;;;;;;;;;
Sun et al.;2019;F. Sun, S. Wang, C. Zhang, and H. Zhang, “Unsupervised field segmentation of unknown protocol messages,” Computer Communications, vol. 146, pp. 121–130, Oct. 2019, doi: 10.1016/j.comcom.2019.06.013. ;10.1016/j.comcom.2019.06.013;;Please review;;;;;;;;;;
Whalen et al.;2010;S. Whalen, M. Bishop, and J. P. Crutchfield, “Hidden Markov Models for Automated Protocol Learning,” in Security and Privacy in Communication Networks, vol. 50, S. Jajodia and J. Zhou, Eds. Berlin, Heidelberg: Springer Berlin Heidelberg, 2010, pp. 415–428. ;10.1007/978-3-642-16161-2_24;http://nob.cs.ucdavis.edu/bishop/papers/2010-securecomm/markov.pdf;Please review;x;;x;;;;;;;
Li et al.;2015;H. Li, B. Shuai, J. Wang, and C. Tang, “Protocol Reverse Engineering Using LDA and Association Analysis,” in 2015 11th International Conference on Computational Intelligence and Security (CIS), Shenzhen, China, Dec. 2015, pp. 312–316, doi: 10.1109/CIS.2015.83. ;10.1109/CIS.2015.83;;Please review;x;;x;;;;;;;
PRE-Bin;2016;S. Tao, H. Yu, and Q. Li, “Bit‐oriented format extraction approach for automatic binary protocol reverse engineering,” IET Communications, vol. 10, no. 6, pp. 709–716, Apr. 2016, doi: 10.1049/iet-com.2015.0797. ;10.1049/iet-com.2015.0797;https://www.researchgate.net/profile/Si_Yu_Tao/publication/298803896_Bit-oriented_format_extraction_approach_for_automatic_binary_protocol_reverse_engineering/links/5cef30e64585153c3da53f0e/Bit-oriented-format-extraction-approach-for-automatic-binary-protocol-reverse-engineering.pdf;Please review;x;;x;;;;;;;
Xiao et al.;2016;M.-M. Xiao, S.-L. Zhang, and Y.-P. Luo, “Automatic network protocol message format analysis,” IFS, vol. 31, no. 4, pp. 2271–2279, Sep. 2016, doi: 10.3233/JIFS-169067. ;10.3233/JIFS-169067;;Please review;x;;x;;;;;;;
NEMESYS;2018;S. Kleber, H. Kopp, and F. Kargl, “{NEMESYS}: Network message syntax reverse engineering by analysis of the intrinsic structure of individual messages,” 2018. ;;https://www.usenix.org/system/files/conference/woot18/woot18-paper-kleber.pdf;Please review;x;;x;;;;;;;https://github.com/vs-uulm/nemesys
PREUGI;2017;M.-M. Xiao and Y.-P. Luo, “Automatic protocol reverse engineering using grammatical inference,” IFS, vol. 32, no. 5, pp. 3585–3594, Apr. 2017, doi: 10.3233/JIFS-169294. ;10.3233/JIFS-169294;;Please review;x;;;x;;;;;;
AutoFuzz;2010;S. Gorbunov and A. Rosenbloom, “Autofuzz: Automated network protocol fuzzing framework,” IJCSNS, vol. 10, no. 8, p. 239, 2010. ;;people.csail.mit.edu/sergeyg/publications/autofuzz.pdf;Please review;x;;x;x;;;;;;
